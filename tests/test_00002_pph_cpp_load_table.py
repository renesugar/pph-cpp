import pytest
from io import BytesIO, StringIO
from pph import PphHashTable, PphRandomNumber, PphKeyFunctions

hashtable = """pph version 1.0.0

F80F007A\\x002D26C3\\x002D4BD0\\x002DA481\\x002D24EE9AE94D01

11818169062053689588

20

0 0 0 0
1 1456326037 65 0
2 1634903761 65 0
3 741198187 65 0
4 4044258847 65 0
5 3497391643 65 34973916430000000
6 4098988053 65 0
7 2715925777 65 0
8 1506365851 65 0
9 3371468677 65 0
10 2572968929 65 0
11 4078949037 65 0
12 2025532739 65 0
13 3961482537 67 0
14 3828088389 65 0
15 585439331 65 0
16 513387817 65 0
17 1683945001 65 0
18 296122251 67 0
19 284825759 65 0

512 335 0.654297 512 65 0 60000

0 105 0 1
1 217 3 2
2 14 0 1
3 202 13 5
6 177 0 1
7 73 0 1
8 326 9 3
10 68 0 1
13 35 0 1
14 165 3 2
15 137 6 3
17 21 0 1
18 84 0 1
19 12 0 1
20 226 3 3
21 336 4 3
22 315 12 4
23 148 2 2
24 121 3 2
25 220 11 4
26 234 5 3
27 36 0 1
28 187 12 4
29 112 1 2
30 301 14 4
31 115 0 1
64 23 0 1
65 172 1 3
66 13 0 1
70 311 3 2
73 215 4 2
76 272 2 2
77 15 0 1
78 213 3 2
80 8 0 1
81 6 0 1
82 10 0 1
83 43 0 1
84 78 0 1
85 159 3 2
88 182 1 2
89 290 10 4
91 39 0 1
93 207 2 2
94 49 0 1
128 175 4 2
130 329 6 4
131 79 0 1
132 116 4 2
133 130 0 1
134 241 1 2
135 82 2 2
137 63 0 1
138 164 0 1
139 42 0 1
141 58 0 1
142 265 8 3
143 348 2 3
144 305 16 3
145 59 0 1
148 268 19 4
149 97 0 1
150 129 0 1
151 75 0 1
152 34 0 1
154 38 0 1
155 144 2 2
156 5 0 1
157 26 0 1
158 55 0 1
159 107 1 2
193 346 1 2
194 319 16 3
195 70 1 2
196 25 0 1
197 67 0 1
199 142 1 2
203 7 0 1
205 40 0 1
206 74 0 1
207 99 3 2
208 162 11 2
209 150 2 3
210 4 0 1
211 52 0 1
212 20 0 1
213 146 1 2
214 44 2 2
215 96 0 1
216 229 15 3
218 180 3 2
219 17 0 1
220 16 0 1
223 224 3 2
256 65 0 1
258 168 5 4
259 294 1 3
261 258 5 2
263 110 2 2
265 22 0 1
266 251 4 3
267 76 2 2
268 118 2 2
269 3 0 1
270 209 3 2
272 125 1 2
273 184 1 3
277 101 0 1
278 178 2 2
280 140 2 2
281 80 0 1
283 123 1 2
285 81 0 1
286 69 0 1
287 153 9 3
320 57 0 1
321 87 0 1
322 193 3 2
323 85 0 1
325 195 1 3
326 41 0 1
327 260 3 2
329 249 1 2
331 274 2 3
333 109 0 1
334 245 2 2
336 88 1 2
339 28 0 1
340 135 1 2
341 2 0 1
342 32 0 1
345 47 1 2
346 94 1 2
349 104 0 1
350 53 0 1
351 11 0 1
381 46 0 1
385 277 1 3
387 56 0 1
388 37 0 1
389 50 3 2
393 60 0 1
394 333 2 3
395 313 1 2
396 280 2 4
397 93 0 1
398 287 12 3
401 211 1 2
402 127 0 1
403 9 0 1
404 254 2 2
405 19 0 1
406 198 4 4
408 284 4 3
409 72 0 1
411 237 2 4
412 27 0 1
414 24 0 1
415 132 1 3
441 102 0 1
448 262 4 3
449 98 0 1
450 30 0 1
452 191 3 2
458 61 1 2
459 297 4 4
460 344 3 2
461 339 18 5
463 29 0 1
464 247 1 2
465 90 1 2
467 86 0 1
469 1 0 1
470 322 17 4
471 66 0 1
472 18 0 1
473 308 2 3
474 232 4 2
476 256 1 2
477 156 3 3
478 31 0 1

880

1 RESET 243 469
2 DATE\\x005FTRUNC 78 341
3 EXTRACT 112 269
4 AS 10 210
5 STREAM 281 156
6 AMMSC 5 81
7 AND 6 203
8 SESSION\\x005FUSER 264 80
9 FULL 125 403
10 PERCENT\\x005FRANK 215 82
11 POWER 217 351
12 UNION 308 19
13 WITH 330 66
14 ASYMMETRIC 13 2
15 LOCAL 165 77
16 FETCH 114 220
17 AUTHORIZATION 16 219
18 MERGE 172 472
19 NOT 190 405
20 NULLIF 193 212
21 REF 229 17
22 RELEASE 241 265
23 HOUR 135 64
24 FOREIGN 121 414
25 BOOLEAN 24 196
26 VARCHAR 320 157
27 LENGTH 161 412
28 UNIQUE 309 339
29 SUBMULTISET 282 463
30 PARTITION 212 450
31 COLLECT 44 478
32 ROLLBACK 250 342
34 CHAR 35 152
35 PROCEDURE 222 13
36 TEMPORARY 290 27
37 CREATE 58 388
38 TIMEZONE\\x005FMINUTE 296 154
39 CHAR\\x005FLENGTH 38 91
40 WHERE 327 205
41 EXTEND 110 326
42 SUM 284 139
43 CONDITION 47 83
44 NCHAR 183 214
45 ANY 7 214
46 REGR\\x005FR2 236 381
47 OUTER 207 345
48 SQLEXCEPTION 273 345
49 CONNECT 48 94
50 CAST 32 389
51 CONSTRAINT 49 389
52 INT 146 211
53 REGR\\x005FCOUNT 234 350
55 ELEMENT 98 158
56 COUNT 55 387
57 REVOKE 247 320
58 SAVEPOINT 256 141
59 SCHEMA 257 145
60 INOUT 143 393
61 OCTET\\x005FLENGTH 196 458
62 LAST 156 458
63 CURRENT 62 137
65 RIGHT 248 256
66 WIDTH\\x005FBUCKET 328 471
67 SYSTEM 286 197
68 SCOPE 258 10
69 NATIONAL 181 286
70 CURRENT\\x005FTIME 69 195
71 BLOB 23 195
72 CURRENT\\x005FTRANSFORM\\x005FGROUP\\x005FFOR\\x005FTYPE 71 409
73 CURRENT\\x005FUSER 72 7
74 SEARCH 260 206
75 UNNEST 311 151
76 NUMERIC 195 267
77 CUME\\x005FDIST 61 267
78 ONLY 201 84
79 OPTION 203 131
80 DELETE 85 281
81 TEXT 291 285
82 NEXT 186 135
83 DISALLOW 91 135
84 PERCENTILE\\x005FCONT 213 18
85 LOWER 168 323
86 MATCH 169 467
87 PREPARE 219 321
88 DEREF 87 336
89 DENSE\\x005FRANK 86 336
90 DESC 88 465
91 CUBE 60 465
93 OFFSET 198 397
94 DISTINCT 93 346
95 CHARACTER\\x005FLENGTH 37 346
96 THEN 292 215
97 DYNAMIC 96 149
98 PUBLIC 223 449
99 IF 137 207
100 END 100 207
101 UPSERT 314 277
102 END\\x002DEXEC 101 441
104 EVERY 103 349
105 EXISTS 107 0
107 ELSE 99 159
108 GROUPING 132 159
109 EXP 108 333
110 EXPLAIN 109 263
111 CURRENT\\x005FSCHEMA 68 263
112 ALLOCATE 2 29
113 EXTERNAL 111 29
115 METHOD 173 31
116 STDDEV\\x005FPOP 279 132
117 SQLWARNING 275 132
118 DETERMINISTIC 90 268
119 WINDOW 329 268
121 CURRENT\\x005FTIMESTAMP 70 24
122 FLOOR 119 24
123 TO 298 283
124 EXEC 105 283
125 SECOND 261 272
126 MONTH 179 272
127 LANGUAGE 154 402
129 GET 128 150
130 INTERSECT 148 133
132 EXECUTE 106 415
133 GROUP 131 415
134 EXCEPT 104 415
135 UESCAPE 307 340
136 FREE 123 340
137 HOLD 134 15
138 CORRESPONDING 54 15
139 EACH 97 15
140 LOCALTIME 166 280
141 TABLESAMPLE 289 280
142 BEGIN 18 199
143 IN 140 199
144 LEFT 160 155
145 BY 26 155
146 LIMIT 163 213
147 AT 14 213
148 CONVERT 51 23
149 INSERT 145 23
150 SUBSTRING 283 209
151 UPDATE 312 209
152 COMMIT 46 209
153 INTERVAL 150 287
154 HAVING 133 287
155 BIT 22 287
156 LARGE 155 477
157 FALSE 113 477
158 ATOMIC 15 477
159 DOUBLE 94 85
160 TIME 293 85
162 AVG 17 208
163 MEMBER 171 208
164 MIN 174 138
165 FIRST\\x005FVALUE 117 14
166 TIMESTAMP 294 14
168 CLOB 40 258
169 LN 164 258
170 DEC 81 258
171 CURRENT\\x005FROLE 67 258
172 DATETIME 77 65
173 ON 200 65
174 ALL 1 65
175 OVERLAPS 209 128
176 SPECIFIC 270 128
177 MOD 176 6
178 FOUND 122 278
179 MODIFIES 177 278
180 IS 152 218
181 MODULE 178 218
182 VALUES 318 88
183 STATIC 278 88
184 ASC 11 273
185 NATURAL 182 273
186 COALESCE 42 273
187 NEW 185 28
188 COLLATE 43 28
189 DEALLOCATE 80 28
190 DAY 79 28
191 STDDEV\\x005FSAMP 280 452
192 SQRT 276 452
193 TRAILING 299 322
194 CALL 27 322
195 COPY 52 325
196 DATABASE 75 325
197 NORMALIZE 189 325
198 CLOSE 41 406
199 COLUMN 45 406
200 NOW 191 406
201 CASCADED 30 406
202 LATERAL 158 3
203 CEILING 34 3
204 LOCALTIMESTAMP 167 3
205 CEIL 33 3
206 NULLX 194 3
207 IMPORT 139 93
208 OR 204 93
209 ORDER 205 270
210 CURRENT\\x005FDEFAULT\\x005FTRANSFORM\\x005FGROUP 65 270
211 USER 315 401
212 BOTH 25 401
213 MINUTE 175 78
214 REFERENCING 231 78
215 OF 197 73
216 PARAMETER 211 73
217 READS 226 1
218 ESCAPE 102 1
220 ALLOW 3 25
221 PERCENTILE\\x005FDISC 214 25
222 ARRAY 9 25
223 POSITION 216 25
224 BIGINT 20 223
225 RANGE 224 223
226 SOME 269 20
227 REGR\\x005FAVGY 233 20
228 DATE 76 20
229 ROLLUP 251 216
230 TRIGGER 303 216
231 REFERENCES 230 216
232 REAL 227 474
233 FIRST 116 474
234 RECURSIVE 228 26
235 CARDINALITY 29 26
236 OVERLAY 210 26
237 FOR 120 411
238 REGR\\x005FINTERCEPT 235 411
239 NULL 192 411
240 CURRENT\\x005FPATH 66 411
241 CHECK 39 134
242 USING 316 134
245 GRANT 130 334
246 REGR\\x005FSYY 240 334
247 RENAME 242 464
248 ABS 0 464
249 RESULT 244 329
250 DROP 95 329
251 BETWEEN 19 266
252 NONE 188 266
253 RETURN 245 266
254 CASE 31 404
255 ROLE 249 404
256 INTO 151 476
257 VARYING 321 476
258 CURRENT\\x005FCATALOG 63 261
259 WITHIN 331 261
260 ROWID 253 327
261 OLD 199 327
262 START 277 448
263 DISCONNECT 92 448
264 FILTER 115 448
265 OUT 206 142
266 TRUNCATE 306 142
267 REGR\\x005FSXX 238 142
268 OPEN 202 148
269 MAX 170 148
270 WHEN 325 148
271 TIMEZONE\\x005FHOUR 295 148
272 NCLOB 184 76
273 SENSITIVE 263 76
274 VALUE 317 331
275 DEFAULT 84 331
276 MULTISET 180 331
277 NO 187 385
278 INDICATOR 141 385
279 SIMILAR 267 385
280 SMALLINT 268 396
281 PRIMARY 220 396
282 LEADING 159 396
283 PRIVILEGES 221 396
284 DECLARE 83 408
285 REGR\\x005FSLOPE 237 408
286 SPECIFICTYPE 271 408
287 ALTER 4 398
288 OVER 208 398
289 SQL 272 398
290 SQLSTATE 274 89
291 COVAR\\x005FSAMP 57 89
292 CHARACTER 36 89
293 ROWS 254 89
294 SYMMETRIC 285 259
295 SHOW 266 259
296 CALLED 28 259
297 LIKE 162 459
298 INSENSITIVE 144 459
299 GLOBAL 129 459
300 SYSTEM\\x005FUSER 287 459
301 CROSS 59 30
302 INNER 142 30
303 LAST\\x005FVALUE 157 30
304 TABLE 288 30
305 FLOAT 118 144
306 WHENEVER 326 144
307 CYCLE 74 144
308 RETURNS 246 473
309 COVAR\\x005FPOP 56 473
310 TINYINT 297 473
311 INTEGER 147 70
312 TRANSLATE 300 70
313 TRANSLATION 301 395
314 DECIMAL 82 395
315 TREAT 302 22
316 IDENTITY 136 22
317 PRECISION 218 22
318 RANK 225 22
319 JOIN 153 194
320 FUNCTION 126 194
321 TRIM 304 194
322 TRUE 305 470
323 ROW\\x005FNUMBER 255 470
324 FROM 124 470
325 ARE 8 470
326 SELECT 262 8
327 FUSION 127 8
328 UNKNOWN 310 8
329 SET 265 130
330 UPPER 313 130
331 CURRENT\\x005FDATE 64 130
332 ILIKE 138 130
333 CURSOR 73 394
334 ROW 252 394
335 VARBINARY 319 394
336 VAR\\x005FPOP 322 21
337 REGR\\x005FAVGX 232 21
338 VAR\\x005FSAMP 323 21
339 DESCRIBE 89 461
340 VIEW 324 461
341 SCROLL 259 461
342 INTERSECTION 149 461
343 ASENSITIVE 12 461
344 CORR 53 460
345 WITHOUT 332 460
346 CONTINUE 50 193
347 WORK 333 193
348 REGR\\x005FSXY 239 143
349 YEAR 334 143
350 BINARY 21 143

"""

keywords = """ABS
ALL
ALLOCATE
ALLOW
ALTER
AMMSC
AND
ANY
ARE
ARRAY
AS
ASC
ASENSITIVE
ASYMMETRIC
AT
ATOMIC
AUTHORIZATION
AVG
BEGIN
BETWEEN
BIGINT
BINARY
BIT
BLOB
BOOLEAN
BOTH
BY
CALL
CALLED
CARDINALITY
CASCADED
CASE
CAST
CEIL
CEILING
CHAR
CHARACTER
CHARACTER_LENGTH
CHAR_LENGTH
CHECK
CLOB
CLOSE
COALESCE
COLLATE
COLLECT
COLUMN
COMMIT
CONDITION
CONNECT
CONSTRAINT
CONTINUE
CONVERT
COPY
CORR
CORRESPONDING
COUNT
COVAR_POP
COVAR_SAMP
CREATE
CROSS
CUBE
CUME_DIST
CURRENT
CURRENT_CATALOG
CURRENT_DATE
CURRENT_DEFAULT_TRANSFORM_GROUP
CURRENT_PATH
CURRENT_ROLE
CURRENT_SCHEMA
CURRENT_TIME
CURRENT_TIMESTAMP
CURRENT_TRANSFORM_GROUP_FOR_TYPE
CURRENT_USER
CURSOR
CYCLE
DATABASE
DATE
DATETIME
DATE_TRUNC
DAY
DEALLOCATE
DEC
DECIMAL
DECLARE
DEFAULT
DELETE
DENSE_RANK
DEREF
DESC
DESCRIBE
DETERMINISTIC
DISALLOW
DISCONNECT
DISTINCT
DOUBLE
DROP
DYNAMIC
EACH
ELEMENT
ELSE
END
END-EXEC
ESCAPE
EVERY
EXCEPT
EXEC
EXECUTE
EXISTS
EXP
EXPLAIN
EXTEND
EXTERNAL
EXTRACT
FALSE
FETCH
FILTER
FIRST
FIRST_VALUE
FLOAT
FLOOR
FOR
FOREIGN
FOUND
FREE
FROM
FULL
FUNCTION
FUSION
GET
GLOBAL
GRANT
GROUP
GROUPING
HAVING
HOLD
HOUR
IDENTITY
IF
ILIKE
IMPORT
IN
INDICATOR
INNER
INOUT
INSENSITIVE
INSERT
INT
INTEGER
INTERSECT
INTERSECTION
INTERVAL
INTO
IS
JOIN
LANGUAGE
LARGE
LAST
LAST_VALUE
LATERAL
LEADING
LEFT
LENGTH
LIKE
LIMIT
LN
LOCAL
LOCALTIME
LOCALTIMESTAMP
LOWER
MATCH
MAX
MEMBER
MERGE
METHOD
MIN
MINUTE
MOD
MODIFIES
MODULE
MONTH
MULTISET
NATIONAL
NATURAL
NCHAR
NCLOB
NEW
NEXT
NO
NONE
NORMALIZE
NOT
NOW
NULL
NULLIF
NULLX
NUMERIC
OCTET_LENGTH
OF
OFFSET
OLD
ON
ONLY
OPEN
OPTION
OR
ORDER
OUT
OUTER
OVER
OVERLAPS
OVERLAY
PARAMETER
PARTITION
PERCENTILE_CONT
PERCENTILE_DISC
PERCENT_RANK
POSITION
POWER
PRECISION
PREPARE
PRIMARY
PRIVILEGES
PROCEDURE
PUBLIC
RANGE
RANK
READS
REAL
RECURSIVE
REF
REFERENCES
REFERENCING
REGR_AVGX
REGR_AVGY
REGR_COUNT
REGR_INTERCEPT
REGR_R2
REGR_SLOPE
REGR_SXX
REGR_SXY
REGR_SYY
RELEASE
RENAME
RESET
RESULT
RETURN
RETURNS
REVOKE
RIGHT
ROLE
ROLLBACK
ROLLUP
ROW
ROWID
ROWS
ROW_NUMBER
SAVEPOINT
SCHEMA
SCOPE
SCROLL
SEARCH
SECOND
SELECT
SENSITIVE
SESSION_USER
SET
SHOW
SIMILAR
SMALLINT
SOME
SPECIFIC
SPECIFICTYPE
SQL
SQLEXCEPTION
SQLSTATE
SQLWARNING
SQRT
START
STATIC
STDDEV_POP
STDDEV_SAMP
STREAM
SUBMULTISET
SUBSTRING
SUM
SYMMETRIC
SYSTEM
SYSTEM_USER
TABLE
TABLESAMPLE
TEMPORARY
TEXT
THEN
TIME
TIMESTAMP
TIMEZONE_HOUR
TIMEZONE_MINUTE
TINYINT
TO
TRAILING
TRANSLATE
TRANSLATION
TREAT
TRIGGER
TRIM
TRUE
TRUNCATE
UESCAPE
UNION
UNIQUE
UNKNOWN
UNNEST
UPDATE
UPPER
UPSERT
USER
USING
VALUE
VALUES
VARBINARY
VARCHAR
VARYING
VAR_POP
VAR_SAMP
VIEW
WHEN
WHENEVER
WHERE
WIDTH_BUCKET
WINDOW
WITH
WITHIN
WITHOUT
WORK
YEAR
"""

def loadfile(file, rootPath, rootPrefix):
  file_canonical = file.replace(rootPath, rootPrefix, 1)

  data = ''
  with open(file, 'r') as f:
    lines = f.readlines()
    data=''.join(lines)
  stream = BytesIO(data.encode('utf-8'))
  return (file_canonical, stream)

# load table
def test_00002():
  expected_keywords = ""

  stream = BytesIO(hashtable.encode('utf-8'))  

  mydict = PphHashTable()
  status = mydict.load(stream)

  if status == True:
    for key in mydict.keys:
      expected_keywords += key + "\n"
  else:
    print("Loading hash table failed.")
  assert keywords == expected_keywords